@use "../../../scss/variables" as defaults;

$animationDuration: var(--rli-animation-duration, 1.5s);
$animationFn: var(--rli-animation-function, ease-in-out);

@function annulusColorPhase($discNumber: null) {
	$cssVar: var(--disc-phase1-color);

	@if ($discNumber and $discNumber != 1) {
		$cssVar: var(--disc-phase#{$discNumber}-color, $cssVar);
	}

	@return $cssVar;
}

.disc-rli-bounding-box {
	--disc-phase1-color: #{defaults.$defaultColor};

	font-size: defaults.$fontSizer;
	display: inline-block;

	.disc-throbber {
		width: 5em;
		height: 5em;
		color: annulusColorPhase();
		display: inline-block;

		// create stacking context
		position: relative;
		z-index: 0;

		.whirl {
			animation: annulusProgressRotate calc($animationDuration * 1.33) linear infinite;
			height: 100%;
			transform-origin: center center;
			width: 100%;
			position: absolute;
			top: 0;
			bottom: 0;
			left: 0;
			right: 0;
			margin: auto;
		}

		.path {
			stroke-dasharray: 1, 125;
			stroke-dashoffset: 0;
			animation:
				$animationDuration $animationFn infinite annulusShrinkStretch,
				calc($animationDuration * 4) $animationFn infinite annuluscoloring;
			stroke-linecap: round;
		}
	}

	.disc-text {
		mix-blend-mode: difference;
		// filter: invert(3%);

		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);

		z-index: -2;

		// background-color: blue;
	}
}

// ðŸ‘‡ Added via JS for better cross-browser support
//
// @property --disc-color1 {
//   syntax: "<color>";
//   inherits: true;
//   initial-value: defaults.$defaultColor;
// }
// @property --disc-color2 {
//   syntax: "<color>";
//   inherits: true;
//   initial-value: defaults.$defaultColor;
// }
// @property --disc-color3 {
//   syntax: "<color>";
//   inherits: true;
//   initial-value: defaults.$defaultColor;
// }
// @property --disc-color4 {
//   syntax: "<color>";
//   inherits: true;
//   initial-value: defaults.$defaultColor;
// }

@keyframes annulusProgressRotate {
	100% {
		transform: rotate(360deg);
	}
}

@keyframes annulusShrinkStretch {
	0% {
		stroke-dasharray: 1, 125;
		stroke-dashoffset: 0;
	}
	50% {
		stroke-dasharray: 92, 125;
		stroke-dashoffset: -35px;
	}
	100% {
		stroke-dasharray: 92, 125;
		stroke-dashoffset: -124px;
	}
}

// @keyframes color {
//   100%,
//   0% {
//     stroke: var(--disc-color1);
//   }
//   40% {
//     stroke: var(--disc-color2);
//   }
//   66% {
//     stroke: var(--disc-color3);
//   }
//   80%,
//   90% {
//     stroke: var(--disc-color4);
//   }
// }

@keyframes annuluscoloring {
	100%,
	0% {
		stroke: annulusColorPhase(1);
	}
	24% {
		stroke: annulusColorPhase(1);
	}
	25% {
		stroke: annulusColorPhase(2);
	}
	49% {
		stroke: annulusColorPhase(2);
	}
	50% {
		stroke: annulusColorPhase(3);
	}
	74% {
		stroke: annulusColorPhase(3);
	}
	75% {
		stroke: annulusColorPhase(4);
	}
  99% {
		stroke: annulusColorPhase(4);
	}
}
