@use "sass:string";
@use "../../../scss/variables" as defaults;

$animationDuration: var(--rli-animation-duration, 1.5s);
$animationFn: var(--rli-animation-function, ease-in-out);

// Animation names
$annulusProgressRotate: string.unique-id();
$annulusShrinkStretch: string.unique-id();
$annuluscoloring: string.unique-id();

@function annulusColorPhase($num: null) {
	$cssVar: var(--OP-annulus-phase1-color);

	@if ($num and $num != 1) {
		$cssVar: var(--OP-annulus-phase#{$num}-color, $cssVar);
	}

	@return $cssVar;
}

.OP-annulus-rli-bounding-box {
	--OP-annulus-phase1-color: #{defaults.$defaultColor};

	font-size: defaults.$fontSizer;
	display: inline-block;

	.OP-annulus-indicator {
		width: 5em;
		height: 5em;
		color: annulusColorPhase();
		display: inline-block;

		// create stacking context
		position: relative;
		z-index: 0;

		.whirl {
			animation: $annulusProgressRotate calc($animationDuration * 1.33) linear
				infinite;
			height: 100%;
			transform-origin: center center;
			width: 100%;
			position: absolute;
			top: 0;
			bottom: 0;
			left: 0;
			right: 0;
			margin: auto;
		}

		.path {
			stroke-dasharray: 1, 125;
			stroke-dashoffset: 0;
			animation:
				$animationDuration $animationFn infinite $annulusShrinkStretch,
				calc($animationDuration * 4) $animationFn infinite $annuluscoloring;
			stroke-linecap: round;
		}
	}

	.OP-annulus-text {
		mix-blend-mode: difference;
		// filter: invert(3%);

		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);

		z-index: -2;

		// background-color: blue;
	}
}

// ðŸ‘‡ Added via JS for better cross-browser support
//
// @property --disc-color1 {
//   syntax: "<color>";
//   inherits: true;
//   initial-value: defaults.$defaultColor;
// }
// @property --disc-color2 {
//   syntax: "<color>";
//   inherits: true;
//   initial-value: defaults.$defaultColor;
// }
// @property --disc-color3 {
//   syntax: "<color>";
//   inherits: true;
//   initial-value: defaults.$defaultColor;
// }
// @property --disc-color4 {
//   syntax: "<color>";
//   inherits: true;
//   initial-value: defaults.$defaultColor;
// }

@keyframes #{$annulusProgressRotate} {
	100% {
		transform: rotate(360deg);
	}
}

@keyframes #{$annulusShrinkStretch} {
	0% {
		stroke-dasharray: 1, 125;
		stroke-dashoffset: 0;
	}
	50% {
		stroke-dasharray: 94, 125;
		stroke-dashoffset: -35px;
	}
	100% {
		stroke-dasharray: 94, 125;
		stroke-dashoffset: -124px;
	}
}

@keyframes #{$annuluscoloring} {
	100%,
	0% {
		stroke: annulusColorPhase(1);
	}
	22% {
		stroke: annulusColorPhase(1);
	}
	25% {
		stroke: annulusColorPhase(2);
	}
	42% {
		stroke: annulusColorPhase(2);
	}
	50% {
		stroke: annulusColorPhase(3);
	}
	72% {
		stroke: annulusColorPhase(3);
	}
	75% {
		stroke: annulusColorPhase(4);
	}
	97% {
		stroke: annulusColorPhase(4);
	}
}
