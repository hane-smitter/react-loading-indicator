@use "sass:string";
@use "../../../scss/variables" as defaults;

$animationDuration: var(--rli-animation-duration, 1.2s);
$animationFn: var(--rli-animation-function, ease-in-out);
$numberOfDots: 12;

// Animation names
$fadeDots: string.unique-id();
$dottedProgressColoring: string.unique-id();

@function dottedColorPhase($num: null) {
	$cssVar: var(--OP-dotted-phase1-color);

	@if ($num and $num != 1) {
		$cssVar: var(--OP-dotted-phase#{$num}-color, $cssVar);
	}

	@return $cssVar;
}

.OP-dotted-rli-bounding-box {
	--OP-dotted-phase1-color: #{defaults.$defaultColor};

	font-size: defaults.$fontSizer;
	box-sizing: border-box;
	display: inline-block;

	.OP-dotted-indicator {
		width: 5em;
		height: 5em;
		color: dottedColorPhase();
		display: inline-block;

		// Create stacking context
		position: relative;
		z-index: 0;

		.OP-dotted-text {
			mix-blend-mode: difference;

			position: absolute;
			top: 50%;
			left: 50%;
			transform: translate(-50%, -50%);

			z-index: -2;
		}
		.dot-shape-holder {
			position: absolute;
			left: 0;
			top: 0;
			bottom: 0;
			right: 0;

			& .dot {
				display: block;
				margin: 0 auto;
				width: 15%;
				height: 15%;
				background-color: currentColor;
				border-radius: 50%;

				animation:
					$animationDuration $animationFn infinite $fadeDots,
					calc($animationDuration * 4) $animationFn infinite
						$dottedProgressColoring;
			}

			@for $j from 1 through $numberOfDots {
				$rotationDeg: calc($j - 1) * calc(360deg / $numberOfDots);
				$animationDelay: calc(
					($animationDuration / $numberOfDots) * ($numberOfDots - ($j - 1)) * -1
				);

				&:nth-of-type(#{$j}) {
					transform: rotate($rotationDeg);
				}
				&:nth-of-type(#{$j}) .dot {
					animation-delay: $animationDelay;
				}
			}
		}
	}
}

@keyframes #{$fadeDots} {
	0%,
	39%,
	100% {
		opacity: 0;
	}
	40% {
		opacity: 1;
	}
}
@keyframes #{$dottedProgressColoring} {
	100%,
	0% {
		background-color: dottedColorPhase(1);
	}
	22% {
		background-color: dottedColorPhase(1);
	}
	25% {
		background-color: dottedColorPhase(2);
	}
	47% {
		background-color: dottedColorPhase(2);
	}
	50% {
		background-color: dottedColorPhase(3);
	}
	72% {
		background-color: dottedColorPhase(3);
	}
	75% {
		background-color: dottedColorPhase(4);
	}
	97% {
		background-color: dottedColorPhase(4);
	}
}
