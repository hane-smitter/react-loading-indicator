@use "sass:string";
@use "../../../scss/variables" as defaults;

$animationDuration: var(--rli-animation-duration, 1s);
$animationFn: var(--rli-animation-function, linear);
$annulusTrackOpacity: 0.25;

$annulusTrackSpin: string.unique-id();
$annulusTrackColoring: string.unique-id();

@function annulusRingColorVars($num: null, $applyTo: "sector") {
	$prependText: --OP-annulus-sector;
	@if ($applyTo == "track") {
		$prependText: --OP-annulus-track;
	}
	$cssVar: var(#{$prependText}-phase1-color);

	@if ($num and $num != 1) {
		$cssVar: var(#{$prependText}-phase#{$num}-color, $cssVar);
	}

	@return $cssVar;
}

@mixin applyColor($num) {
	border-color: annulusRingColorVars($num, "track");
	border-top-color: annulusRingColorVars($num);
}

.OP-annulus-sector-track-rli-bounding-box {
	font-size: defaults.$fontSizer;
	display: inline-block;

	.OP-annulus-sector-track-indicator {
		--OP-annulus-track-phase1-color: #{rgba(
				defaults.$defaultColor,
				$annulusTrackOpacity
			)}; // sass specific rgba
		--OP-annulus-sector-phase1-color: #{defaults.$defaultColor};

		width: 5em;
		height: 5em;
		color: annulusRingColorVars();
		display: inline-block;

		// create stacking context
		position: relative;
		z-index: 0;

		.annulus-track-ring {
			width: 100%;
			height: 100%;
			border-width: 0.34em;
			border-style: solid;
			border-radius: 50%;
			box-sizing: border-box;
			@include applyColor(1);

			animation:
				$animationDuration $animationFn infinite $annulusTrackSpin,
				calc($animationDuration * 4) $animationFn infinite $annulusTrackColoring;
		}

		.OP-annulus-sector-text {
			mix-blend-mode: difference;
			// filter: invert(3%);

			position: absolute;
			top: 50%;
			left: 50%;
			transform: translate(-50%, -50%);

			z-index: -2;

			// background-color: blue;
		}
	}
}

@keyframes #{$annulusTrackSpin} {
	to {
		transform: rotate(1turn);
	}
}

@keyframes #{$annulusTrackColoring} {
	100%,
	0% {
		@include applyColor(1);
	}
	18% {
		@include applyColor(1);
	}
	25% {
		@include applyColor(2);
	}
	43% {
		@include applyColor(2);
	}
	50% {
		@include applyColor(3);
	}
	68% {
		@include applyColor(3);
	}
	75% {
		@include applyColor(4);
	}
	93% {
		@include applyColor(4);
	}
}
