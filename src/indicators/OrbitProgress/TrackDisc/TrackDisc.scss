@use "../../../scss/variables" as defaults;

$animationDuration: var(--rli-animation-duration, 1s);
$animationFn: var(--rli-animation-function, linear);

.track-disc-rli-bounding-box {
  font-size: defaults.$fontSizer;
  display: inline-block;

  .track-disc-throbber {
    width: 5em;
    height: 5em;
    color: defaults.$defaultColor;
    display: inline-block;

    // create stacking context
    position: relative;
    z-index: 0;

    .track-disc-ring {
      width: 100%;
      height: 100%;
      border-width: 0.38em;
      border-style: solid;
      border-radius: 50%;
      border-color: var(--track-path-color, #eeeeee);
      border-top-color: currentColor;
      box-sizing: border-box;

      animation-name: trackDiscSpin;
      animation-duration: $animationDuration;
      animation-timing-function: $animationFn;
      animation-iteration-count: infinite;
    }

    .track-disc-text {
      mix-blend-mode: difference;
      // filter: invert(3%);

      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);

      z-index: -2;

      // background-color: blue;
    }
  }
}

@keyframes trackDiscSpin {
  to {
    transform: rotate(1turn);
  }
}

/* 

$spinner-color: red !default;
$spinner-background-color: #eee !default;
$spinner-stroke: 2px !default;
$spinner-diameter: 40px !default;
$spinner-sides: 1 !default;

@mixin spinner(
  $color: $spinner-color,
  $background-color: $spinner-background-color,
  $stroke: $spinner-stroke,
  $diameter: $spinner-diameter,
  $sides: $spinner-sides
) {
  border: $stroke solid $background-color;
  font-size: $diameter;
  width: 1em;
  height: 1em;
  border-radius: .5em;
  @include box-sizing(border-box);
  -webkit-animation: spin 1s linear infinite;
  -moz-animation: spin 1s linear infinite;
  animation: spin 1s linear infinite;
  border-top-color: $color;
  @if $sides >= 2 {
    border-right-color: $color;
  }
  @if $sides >= 3 {
    border-bottom-color: $color;
  }
}

.spinner {
  @include spinner();
}

@keyframes spin {
  to {
    @include transform(rotate(360deg));
  }
}


*/
