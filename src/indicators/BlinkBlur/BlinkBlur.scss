@use "sass:string";
@use "../../scss/variables" as defaults;

$animationDuration: var(--rli-animation-duration, 2s);
$animationFn: var(--rli-animation-function, linear);

$numOfShapes: 6;
$shapeWidth: 2em;
$shapeSpacing: 0.4em;

$shiftingBlinkBlur: string.unique-id();
$blinkBlurColoring: string.unique-id();

@function shapeColorPhase($shapeNumber: null) {
	$cssVar: var(--shape-phase1-color);

	@if ($shapeNumber and $shapeNumber != 1) {
		$cssVar: var(--shape-phase#{$shapeNumber}-color, $cssVar);
	}

	@return $cssVar;
}

.blink-blur-rli-bounding-box {
	--shape-phase1-color: #{defaults.$defaultColor};

	font-size: defaults.$fontSizer;
	color: shapeColorPhase(1);

	.blink-blur-indicator {
		// create stacking context
		isolation: isolate;

		display: flex;
		flex-direction: row;
		column-gap: $shapeSpacing;

		.blink-blur-shape {
			--x-deg: -20deg;

			width: $shapeWidth;
			height: calc($shapeWidth / 0.8);

			border-radius: 0.25em;
			color: inherit;

			transform: skewX(var(--x-deg));
			background-color: shapeColorPhase();

			animation-name: $shiftingBlinkBlur, $blinkBlurColoring;
			animation-duration: $animationDuration, calc($animationDuration * 4);
			animation-timing-function: $animationFn;
			animation-iteration-count: infinite;

			&.blink-blur-shape1 {
				animation-delay: calc($animationDuration / $numOfShapes * -5);
			}
			&.blink-blur-shape2 {
				animation-delay: calc($animationDuration / $numOfShapes * -4);
			}
			&.blink-blur-shape3 {
				animation-delay: calc($animationDuration / $numOfShapes * -3);
			}
			&.blink-blur-shape4 {
				animation-delay: calc($animationDuration / $numOfShapes * -2);
			}
			&.blink-blur-shape5 {
				animation-delay: calc($animationDuration / $numOfShapes * -1);
			}
			&.blink-blur-shape6 {
				animation-delay: calc($animationDuration / $numOfShapes * 0);
			}
		}
	}
}

@keyframes #{$shiftingBlinkBlur} {
	100%,
	0% {
		opacity: 0.4;
		filter: blur(2px) drop-shadow(0 0 0.625em);
		transform: skewX(var(--x-deg)) scale(1.45);
	}

	// --Cause blink--
	39% {
		opacity: 0.8;
	}
	40%,
	41%,
	42% {
		opacity: 0;
	}
	43% {
		opacity: 0.8;
	}
	// --Cause blink--

	50% {
		opacity: 1;
		filter: blur(0px) drop-shadow(0 0 0);
		transform: skewX(var(--x-deg)) scale(1);
	}
}

// Firefox has a bug: setting variables in @keyframe rule (does not take effect): https://bugzilla.mozilla.org/show_bug.cgi?id=1763376
// Switched approach to a different way that doesn't require setting var in @keyframes
@keyframes #{$blinkBlurColoring} {
	100%,
	0% {
		// --color-base: var(--shape1-color-base);
		color: shapeColorPhase(1);
		// background-color: rgba(colBase(), 1);
		background-color: shapeColorPhase(1);
	}

	25% {
		// --color-base: var(--shape2-color-base);
		color: shapeColorPhase(2);
		// background-color: rgba(colBase(), 1);
		background-color: shapeColorPhase(2);
	}

	50% {
		// --color-base: var(--shape3-color-base);
		color: shapeColorPhase(3);
		// background-color: rgba(colBase(), 1);
		background-color: shapeColorPhase(3);
	}

	75% {
		// --color-base: var(--shape4-color-base);
		color: shapeColorPhase(4);
		// background-color: rgba(colBase(), 1);
		background-color: shapeColorPhase(4);
	}
}
