@use "../../scss/variables" as defaults;

$twistAnimDuration: 4s;
$twistBladeAnimDuration: 2s;
$twistBladeWidth: 4em;

.twist-bounding-box {
  box-sizing: border-box;
  font-size: defaults.$fontSizer;
  position: relative;
  isolation: isolate;
  color: defaults.$defaultColor;

  .twist-loader {
    width: $twistBladeWidth;
    perspective: 1000px;
    animation: twistRotate360 $twistAnimDuration linear infinite;

    .blade {
      display: block;
      width: $twistBladeWidth;
      height: calc($twistBladeWidth / 8);
      background: currentColor;
      margin-bottom: 0.1em;
      animation: twistBlade 4s linear infinite, bgPlay $twistBladeAnimDuration linear infinite;
      opacity : 0;
      transition: opacity 400ms;

      &:nth-child(1) {
        animation-delay: 0s;
      }
      &:nth-child(2) {
        animation-delay: 0.25s;
      }
      &:nth-child(3) {
        animation-delay: 0.5s;
      }
      &:nth-child(4) {
        animation-delay: 0.75s;
      }
      &:nth-child(5) {
        animation-delay: 1s;
      }
      &:nth-child(6) {
        animation-delay: 1.25s;
      }
      &:nth-child(7) {
        animation-delay: 1.5s;
      }
      &:nth-child(8) {
        animation-delay: 1.75s;
      }
    }
  }

  .twist-text {
    color: currentColor;
    mix-blend-mode: difference;

    position: absolute;
    top: 105%;
    left: 50%;
    transform: translateX(-50%);

    z-index: -2;
  }
}

@keyframes twistBlade {
  from {
    transform: rotateY(0deg) rotateX(-20deg);
  }
  to {
    transform: rotateY(360deg) rotateX(-20deg);
  }
}

@keyframes bgPlay {
  0% {
    filter: brightness(1);
    opacity: 1;
  }
  50% {
    filter: brightness(0.59);
    opacity: 1;
  }
  51% {
    filter: opacity(0.5);
    opacity: 1;
  }
  70% {
    filter: opacity(0.7);
    opacity: 1;
  }
  100% {
    filter: brightness(1);
    opacity: 1;
  }
}

@keyframes twistRotate360 {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
