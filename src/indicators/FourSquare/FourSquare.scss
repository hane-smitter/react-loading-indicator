@use "../../scss/variables" as defaults;

$expandSquareAnimDuration: 1s;
$rotateSquareAnimDuration: 1s;

.foursquare-bounding-box {
    box-sizing: border-box;
    display: inline-block;
    font-size: defaults.$fontSizer;
    overflow: visible;

    .foursquare-loader {
        --dimension-unit: 4;

        height: calc(var(--dimension-unit) * 1em);
        width: calc(var(--dimension-unit) * 1em);
        color: defaults.$defaultColor;
        font-size: 1em;
        // Create stacking context and relative positioning
        position: relative;
        z-index: 0;

        .squares-container {
            height: inherit;
            width: inherit;
            color: currentColor;
            position: relative;
            animation: expand $expandSquareAnimDuration cubic-bezier(0.05, 0.28, 0.79, 0.98) infinite;
            transform: rotate(45deg);
            position: absolute;
            top: 0;
            left: 0;
        }

        .foursquare-text {
            mix-blend-mode: difference;
            // filter: invert(3%);

            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-30%, -50%);

            z-index: -2;
        }

        .square {
            position: absolute;
            width: calc(var(--dimension-unit) / 2 * 1em);
            height: calc(var(--dimension-unit) / 2 * 1em);
            border-radius: 3px;
            background-color: currentColor;
            animation: rotateSquare $rotateSquareAnimDuration both infinite;

            &.square1 {
                background-color: var(--square1-color, currentColor);
                top: 0;
                left: 0;
            }

            &.square2 {
                background-color: var(--square2-color, currentColor);
                top: 0;
                right: 0;
            }

            &.square3 {
                background-color: var(--square3-color, currentColor);
                bottom: 0;
                left: 0;
            }

            &.square4 {
                background-color: var(--square4-color, currentColor);
                bottom: 0;
                right: 0;
            }
        }
    }
}

@keyframes expand {
    0% {
        width: calc(var(--dimension-unit) * 1em);
        height: calc(var(--dimension-unit) * 1em);
    }

    10% {
        width: calc(var(--dimension-unit) * 1em);
        height: calc(var(--dimension-unit) * 1em);
    }

    50% {
        width: calc(var(--dimension-unit) * 1em + 2em);
        height: calc(var(--dimension-unit) * 1em + 2em);
    }

    90% {
        width: calc(var(--dimension-unit) * 1em);
        height: calc(var(--dimension-unit) * 1em);
    }

    100% {
        width: calc(var(--dimension-unit) * 1em);
        height: calc(var(--dimension-unit) * 1em);
    }
}

@keyframes rotateSquare {
    0% {
        transform: rotate(0deg);
    }

    10% {
        transform: rotate(0deg);
    }

    50% {
        transform: rotate(90deg);
    }

    90% {
        transform: rotate(90deg);
    }

    100% {
        transform: rotate(90deg);
    }
}
