@use "sass:string";
@use "../../../scss/variables" as defaults;

// Radial graient syntax: radial-gradient( [ <ending-shape> || <size> ]? [ at <position> ]? , <color-stop-list> )
$animationDuration: var(--rli-animation-duration, 1.2s);
// $animationDuration: 1.2s;
$animationFn: var(--rli-animation-function, linear);
$dot-width: 1.1em;

$bobMovement: string.unique-id();
$bobColoringAnim: string.unique-id();

@function TDBobColorVar($num: null) {
	$cssVar: var(--TD-bob-phase1-color);

	@if ($num and $num != 1) {
		$cssVar: var(--TD-bob-phase#{$num}-color, $cssVar);
	}

	@return $cssVar;
}

@mixin dot($dotNo) {
	$dotColor: currentColor;

	@if ($dotNo) {
		$dotColor: var(--bob-dot#{$dotNo}-color, currentColor);
	}

	// background: radial-gradient(circle at center, $dotColor 0% 58%, rgba(0, 0, 0, 0) 68%) 50% 50%/100% 50% no-repeat;
	// background: radial-gradient(
	// 		circle at center,
	// 		$dotColor 0% 50%,
	// 		rgba(0, 0, 0, 0) calc(50% + 1px)
	// 	)
	// 	50% 50%/100% 50% no-repeat;
	background: radial-gradient(
			circle closest-side at center,
			currentColor 0% 92%,
			rgba(0, 0, 0, 0) calc(92% + 1px)
		)
		50% 50%/100% 50% no-repeat;
}

.bob-rli-bounding-box {
	--TD-bob-phase1-color: #{defaults.$defaultColor};

	box-sizing: border-box;
	font-size: defaults.$fontSizer;
	display: inline-block;
	color: TDBobColorVar();

	.bob-indicator {
		// width = dot1: 2.5em + spacing: 1.25em + dot2: 2.5em + spacing: 1.25em + dot3: 2.5em
		width: calc($dot-width * 3 + (($dot-width * 0.5) * 2));
		height: calc($dot-width * 2);
		position: relative;
		display: block;
		margin: 0 auto;

		.bobbing,
		.bobbing::before,
		.bobbing::after {
			width: $dot-width;
			height: 100%;
			display: grid;

			// animation-name: $bobMovement, $bobColoringAnim;
			// animation-duration: $animationDuration;
			// animation-iteration-count: infinite;
			// animation-timing-function: $animationFn;
			// animation-delay: calc(var(--delay, 0) * 0.4s);

			animation:
				$bobMovement $animationDuration $animationFn infinite,
				$bobColoringAnim calc($animationDuration * 4) $animationFn infinite;
			animation-delay: var(--delay);
		}
		.bobbing::before,
		.bobbing::after {
			content: "";
			grid-area: 1/1;
		}
		.bobbing {
			// --delay: -0.15;
			--delay: #{calc($animationDuration * 0.1 * -1)}; // 10% into keyframe animation

			@include dot(1);
		}
		.bobbing::before {
			// --delay: 0;
			--delay: #{calc($animationDuration * 0)};

			transform: translateX(150%);

			@include dot(2);
		}
		.bobbing::after {
			// --delay: 0.5;
			--delay: #{calc($animationDuration * 0.1)};

			transform: translateX(300%);

			@include dot(3);
		}
	}
}

@keyframes #{$bobMovement} {
	100%,
	0% {
		background-position: 50% 50%;
	}
	15% {
		background-position: 50% 10%;
	}
	30% {
		background-position: 50% 100%;
	}
	40% {
		background-position: 50% 0%;
	}
	// 70% {
	// 	background-position: 50% 60%;
	// }
	50% {
		background-position: 50% 90%;
	}
	70% {
		background-position: 50% 10%;
	}
	98% {
		background-position: 50% 50%;
	}
}
@keyframes #{$bobColoringAnim} {
	100%,
	0% {
		color: TDBobColorVar(1);
	}
	22% {
		color: TDBobColorVar(1);
	}
	25% {
		color: TDBobColorVar(2);
	}
	47% {
		color: TDBobColorVar(2);
	}
	50% {
		color: TDBobColorVar(3);
	}
	72% {
		color: TDBobColorVar(3);
	}
	75% {
		color: TDBobColorVar(4);
	}
	97% {
		color: TDBobColorVar(4);
	}
}
