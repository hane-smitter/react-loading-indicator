@use "../../../scss/variables" as defaults;

$animationDuration: var(--rli-animation-duration, 1.4s);
$animationFn: var(--rli-animation-function, linear);
$dot-width: 0.625em;
$windmill-wrapper-box: calc($dot-width * 3);

@mixin windmillPrep($dotNo) {
  width: $dot-width;
  height: $dot-width;
  border-radius: 50%;

  @if ($dotNo == 1) {
    background-color: var(--windmill-dot1-color, currentColor);
  } @else if ($dotNo == 2) {
    background-color: var(--windmill-dot2-color, currentColor);
  } @else if ($dotNo == 3) {
    background-color: var(--windmill-dot3-color, currentColor);
  } @else {
    background-color: currentColor;
  }
}

.windmill-rli-bounding-box {
  box-sizing: border-box;
  font-size: defaults.$fontSizer;
  display: inline-block;
  color: defaults.$defaultColor;

  .windmill-indicator {
    width: $windmill-wrapper-box;
    height: $windmill-wrapper-box;
    display: block;
    position: relative;
    margin: 0 auto;

    .windmill {
      position: absolute;
      display: inline-block;
      // Calculating absolute left value to place element at the middle
      // without using: `transform(translate(-50%)), since it's overridden during animation`
      left: calc(($windmill-wrapper-box * 0.5) - ($dot-width / 2));

      @include windmillPrep(1);

      transform-origin: 50% 150%;
      animation-name: windmillSpin;
      animation-duration: $animationDuration;
      animation-iteration-count: infinite;
      animation-timing-function: $animationFn;

      &::before,
      &::after {
        content: "";
        display: inline-block;
        position: absolute;
      }

      &::before {
        left: calc(50% * 1.7320508 /* √3 */ * -1); // 1.732050808
        top: calc(150%);

        @include windmillPrep(2);
      }

      &::after {
        left: calc(50% * 1.7320508 /* √3 */);
        top: calc(150%);

        @include windmillPrep(3);
      }
    }
  }
}

@keyframes windmillSpin {
  0% {
    transform: rotateZ(0deg) translate3d(0, 0, 0);
  }

  100% {
    transform: rotateZ(360deg) translate3d(0, 0, 0);
  }
}
