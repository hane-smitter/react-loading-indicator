@use "sass:math";
@use "sass:meta";
@use "sass:string";
@use "sass:list";
@use "../../scss/variables" as defaults;
@use "../../scss/mixins" as sharedMixins;

$fallbackAnimationDuration: 1.2s; // This time value should be in sync with JS(React component)
$animationDuration: var(
	#{defaults.$animationDurationVarName},
	$fallbackAnimationDuration
);

$animationFn: var(
	#{defaults.$animationEasingVarName},
	cubic-bezier(0.08, 0.03, 0.91, 0.93)
);
// $commetball-size: 0.4667em;
$commetball-size: 0.5em;
$commet-trail-width: 0.25em;

$commetSpinAnimation: string.unique-id();
$commetColoring: string.unique-id();

// Sass list with variable names that color the animation
// NOTE: These names should match with ones in Javascript(React component)
$coloringPropertyNames: (
	"--commet-phase1-color",
	"--commet-phase2-color",
	"--commet-phase3-color",
	"--commet-phase4-color"
);

@mixin fontColor($phaseNum: null) {
	$varName: string.unquote(list.nth($coloringPropertyNames, 1));
	$cssVar: var($varName);

	@if ($phaseNum and $phaseNum != 1) {
		$newVarName: string.unquote(list.nth($coloringPropertyNames, $phaseNum));

		// Explicitly add fallback since @property support is still catching up
		$cssVar: var($newVarName, var($varName));
	}

	color: $cssVar;
}

@mixin glow {
	box-shadow:
		0 0 0.2em 0em currentColor,
		0 0 0.6em 0em currentColor;
}

.commet-rli-bounding-box {
	--commet-phase1-color: #{defaults.$defaultColor};

	// Commet ball will be raised upwards to centrally align it with commet-trail.
	// This means setting overflow to hidden on this element(*-bounding-box), will clip some part of the commet-ball that will pop-out.
	// So we add a room for the commet ball to be visible by increasing the width & length by at least half the size of the commet-ball(can be more)
	// Additional 0.6em is the shadow spread radius of the commet ball
	$dimensions: calc(6em + ($commetball-size * 0.5) + 0.6em);

	font-size: defaults.$fontSizer;
	width: $dimensions;
	height: $dimensions;
	overflow: hidden; // A box will be rotating. Its edges should be clipped when they go outside bounding box(Important to avoid triggering browser scrollbar on small viewports)

	display: inline-block;
	box-sizing: border-box;
	position: relative;
	// Create stacking context
	isolation: isolate;

	.commet-indicator {
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
		margin: auto;
		box-sizing: border-box;
		width: 6em;
		height: 6em;
		@include fontColor();
		display: inline-block;
		isolation: isolate;

		// NOTE: Below also creates stacking context
		position: absolute;
		z-index: 0;

		animation: calc($animationDuration * 4) $animationFn infinite
			$commetColoring;

		.commet-box {
			position: absolute;
			display: inline-block;
			top: 0;
			right: 0;
			bottom: 0;
			bottom: 0;
			left: 0;
			margin: auto;

			animation: $commetSpinAnimation $animationDuration $animationFn infinite;

			&:nth-of-type(1) {
				width: 100%;
				height: 100%;

				animation-direction: normal;
			}
			&:nth-of-type(2) {
				width: 70%;
				height: 70%;

				animation-direction: reverse;
			}

			.commetball-box {
				position: absolute;
				top: 0;
				right: 0;
				bottom: 0;
				bottom: 0;
				left: 0;
				display: inline-block;

				// Commet ball
				&::before {
					content: "";
					width: $commetball-size;
					height: $commetball-size;
					border-radius: 50%;
					background-color: currentColor;
					position: absolute;
					top: calc(($commetball-size - $commet-trail-width) * 0.5 * -1);
					left: 50%;
					transform: translateX(-50%);

					@include glow();
				}
			}

			// The tail of a commet ball
			.commet-trail {
				position: absolute;
				top: 0;
				right: 0;
				bottom: 0;
				bottom: 0;
				left: 0;
				border-radius: 50%;
				box-sizing: border-box;
				border-style: solid;

				&.trail1 {
					border-color: currentColor transparent transparent currentColor;
					border-width: $commet-trail-width $commet-trail-width 0 0;
					transform: rotateZ(-45deg);
				}
				&.trail2 {
					border-color: currentColor currentColor transparent transparent;
					border-width: $commet-trail-width 0 0 $commet-trail-width;
					transform: rotateZ(45deg);
				}
			}
		}
	}

	.commet-text {
		mix-blend-mode: difference;
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
		@include fontColor();
	}
}

@include sharedMixins.registerCustomProperties($coloringPropertyNames) {
	syntax: "<color>";
	inherits: true;
	initial-value: #{defaults.$defaultColor};
}

// Sass list
$animationDurationName: (#{defaults.$animationDurationVarName});
// Register CSS custom property for variable with animation Duration
// NOTE: We wont register custom property for animation easing function since it has a syntax that is not yet supported by CSS @property
@include sharedMixins.registerCustomProperties($animationDurationName) {
	syntax: "<time>";
	inherits: true;
	initial-value: $fallbackAnimationDuration;
}

@keyframes #{$commetSpinAnimation} {
	to {
		transform: rotate(1turn);
	}
}
@keyframes #{$commetColoring} {
	100%,
	0% {
		@include fontColor(1);
	}
	20% {
		@include fontColor(1);
	}
	25% {
		@include fontColor(2);
	}
	45% {
		@include fontColor(2);
	}
	50% {
		@include fontColor(3);
	}
	70% {
		@include fontColor(3);
	}
	75% {
		@include fontColor(4);
	}
	95% {
		@include fontColor(4);
	}
}
